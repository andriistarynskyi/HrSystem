# a. Get information about all Employees
SELECT * FROM employees;
# b. Get all employees with a name ‘David’
SELECT * FROM employees
WHERE first_name = 'David';
# c. Get all employees with job_id equals to ‘IT_PROG’
SELECT * FROM employees
WHERE job_id = 'IT_PROG';
# d. Get all employees from department 50(department_id) and salary more than 4000
SELECT * FROM employees
WHERE department_id = 50 AND salary > 4000;
# e. Get all employees from department 20 and 30 (department_id)
SELECT * FROM employees
WHERE department_id in (20, 30);
# f. Get all employees whose last letter of the name equals to 'a'
SELECT * FROM employees
WHERE SUBSTRING(first_name, -1) in ('a');
# g.Get all employees from department 50 and 80 (department_id)
# who has a bonus (commission_pct is not empty)
SELECT *
FROM employees
WHERE department_id in (50, 80)
  AND commission_pc IS NOT NULL;
# h. Get all employees who has a salary in range of 8000-9000 including
SELECT *
FROM employees
WHERE salary BETWEEN 8000 AND 9000;
# i. Get all employees who has name containing '%' character
SELECT * FROM employees
WHERE LOCATE('{' % '}', first_name) > 0;
# j. Get all managers (see the manager_id)
SELECT * FROM employees WHERE employee_id IN(SELECT manager_id FROM employees);
# k. Get all the employees with their positions in format: Jessica(sh_clerk). Use  concatenation to achieve it
SELECT CONCAT(e.first_name, '(', j.job_title, ')', '.')
FROM employees e,
     jobs j
WHERE e.job_id = j.job_id;
# l. Get all employees who has a name longer than 10 chars
SELECT * FROM employees
WHERE LENGTH(first_name) > 10;
# m. Get all employees who was hired on the first day of any month
SELECT *
FROM employees
WHERE DAY(hire_date) = 1;
# n. Get all employees who was hired in 1996
SELECT *
FROM employees
WHERE YEAR(hire_date) = 1996;
# o. Get all employees who have a salary more than $20000 (including bonus % mentioned  in commission_pct)
SELECT *
FROM employees
WHERE (
          IF(commission_pc IS NULL,
             salary > 20000,
             salary + employees.salary * employees.commission_pc > 20000
              )
          );
# p. Get all employees and information regarding the their bonus (yes/no) using conditional  operator
SELECT first_name,
       last_name,
       email,
       phone_number,
       job_id,
       salary,
       commission_pc,
       IF(commission_pc IS NULL, 'NO', 'YES') AS bonus_status
FROM employees;
# q. Create report by department_id with minimum and maximum salary,
# earliest and latest  date of hire and number of employees.
# Sort the result by the number of employees in  descending order
# (ie ‘1, 100000, 20000, 24-May-1990, 1-Jan-2020, 100’)
SELECT d.department_id,
       MIN(e.salary) AS min_salary,
       MAX(e.salary) AS max_salary,
       MIN(e.hire_date) AS earliest_date,
       MAX(e.hire_date) AS lastest_date,
       COUNT(e.employee_id) AS number_of_employees
FROM departments d, employees e
WHERE d.department_id = e.department_id
GROUP BY d.department_id ORDER BY number_of_employees DESC;
# r. Show how many employees were hired in one year (find how to extract the year from  date in MySQL)
SELECT DISTINCT YEAR(hire_date) as year, COUNT(employee_id)
FROM employees GROUP BY year;
# s. Get department_id with more than 30 employees in it (using having) t.
SELECT d.department_id, COUNT(e.employee_id) AS employees_count
FROM departments d, employees e
WHERE d.department_id = e.department_id
GROUP BY d.department_id
HAVING employees_count > 30;
# Get manager_id with more than 5 subordinates whose total salary >500000.
# Use group  by max salary of all employees
SELECT manager_id, COUNT(*), SUM(SALARY) AS salary_total
FROM employees
GROUP by manager_id
HAVING COUNT(*) > 5 AND salary_total > 50000;
# u. Get max salary of all employees whose name ends with ‘CLERK’
SELECT MAX(salary) FROM employees
WHERE employees.last_name LIKE 'CLERK';
# v. For each country show its region (ie ‘Germany, Europe’)
SELECT c.country_name AS coutry_name, r.region_name
FROM countries c,
     regions r
WHERE c.region_id = r.region_id;
# w. Show all employees that work in department_name=’IT’
SELECT e.employee_id,
       e.first_name,
       e.last_name,
       e.email,
       e.phone_number,
       e.hire_date,
       e.job_id,
       e.salary,
       e.commission_pc,
       e.manager_id,
       e.department_id
FROM employees e,
     departments d
WHERE e.department_id = d.department_id
  AND d.department_name = 'IT';
# x. Get details information about each employee (First_name, Last_name, Department,  Job, Street, Country, Region)
SELECT e.first_name AS first_name,
       e.last_name AS last_name,
       d.department_name AS department_name,
       j.job_title AS job_title,
       l.street_address AS street_name,
       c.country_name AS country,
       r.region_name AS region
FROM employees e, departments d, jobs j, locations l, countries c, regions r
WHERE e.department_id = d.department_id AND
      d.location_id = l.location_id AND
      l.country_id = c.country_id AND
      c.region_id = r.region_id AND
      e.job_id = j.job_id;
# y. Show manager names with >5 subordinates (use the same table twice)
SELECT first_name, manager_id, COUNT(*)
FROM employees
GROUP BY manager_id
HAVING COUNT(*) > 5;
# z. Show all employees who don’t have manager
SELECT * from employees WHERE manager_id IS NULL;
# aa. Show all employees and their current status (`Currently working`/`Left the company`  based on JOB_HISTORY.end_date)
SELECT e.first_name, e.last_name,
       IF(j.end_date IS NOT NULL,
       'Left the company',
        'Currently working')
FROM employees e, job_history j
WHERE e.employee_id = j.employee_id;
# bb. Get all employees who live in Region (ie in Europe)
SELECT e.employee_id,
       e.first_name,
       e.last_name,
       e.email,
       e.phone_number,
       e.hire_date,
       e.job_id,
       e.salary,
       e.commission_pc,
       e.manager_id,
       e.department_id
FROM employees e,
     departments d,
     locations l,
     countries c,
     regions r
WHERE e.department_id = d.department_id
  AND d.location_id = l.location_id
  AND l.country_id = c.country_id
  AND c.region_id = r.region_id
  AND r.region_name = 'Europe';
# cc. Show all departments with >30 employees (use having count(*))
SELECT d.department_name, e.employee_id, COUNT(*)
FROM departments d, employees e
WHERE d.department_id = e.department_id
GROUP BY d.department_name, d.department_id
HAVING COUNT(*) > 30;
# dd. Show all departments that don’t have any employees
SELECT d.department_name, COUNT(e.employee_id) AS employees_count
FROM departments d, employees e
WHERE d.department_id = e.department_id
GROUP BY d.department_name
HAVING employees_count = 0;
# ee. Show all employees in format: First_name, Job_title, Department_name
SELECT e.first_name, j.job_title, d.department_name
FROM employees e,jobs j, departments d
WHERE e.job_id = j.job_id AND
      e.department_id = e.department_id;
# ff. Get employees that have salary more than average in the company
SELECT *
FROM employees
WHERE (
          salary > (SELECT AVG(salary) FROM employees));
# gg. Get all employees whose manager gets salary > 15000
SELECT *
FROM employees
WHERE (
          SELECT manager_id
          WHERE (salary > 15000)
      );
# hh. Show all employees that are not managers
SELECT * FROM employees WHERE(employee_id NOT IN(SELECT manager_id from employees));